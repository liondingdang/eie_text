###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        05/Jan/2020  11:19:31
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\EIE_TEXT\二进制计数器\firmware_ascii\bsp\eief1-pcb-01.c
#    Command line =  
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\bsp\eief1-pcb-01.c -D
#        EIE_ASCII --preprocess=cl
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\Debug\List\ -lC
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\Debug\List\ -o
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\Debug\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Software\Develop\IAR for
#        ARM\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\ -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\bsp\ -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\drivers\ -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\application\ -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\..\firmware_common\
#        -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\..\firmware_common\application\
#        -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\..\firmware_common\bsp\
#        -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\..\firmware_common\cmsis\
#        -I
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\..\..\firmware_common\drivers\
#        -On --use_c++_inline --require_prototypes -I "C:\Software\Develop\IAR
#        for ARM\arm\CMSIS\Include\"
#    List file    =  
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\Debug\List\eief1-pcb-01.lst
#    Object file  =  
#        F:\EIE_TEXT\二进制计数器\firmware_ascii\iar_7_20_1\Debug\Obj\eief1-pcb-01.o
#
###############################################################################

F:\EIE_TEXT\二进制计数器\firmware_ascii\bsp\eief1-pcb-01.c
      1          /*!**********************************************************************************************************************
      2          @file eief1-pcb-01.c                                                                
      3          @brief This file provides core and GPIO functions for the eief1-pcb-01 board.
      4          
      5          Basic board setup functions are here which are not part of the API for the system since they
      6          are one-time configurations for the processor.  
      7          
      8          ------------------------------------------------------------------------------------------------------------------------
      9          GLOBALS
     10          - NONE
     11          
     12          CONSTANTS
     13          - NONE
     14          
     15          TYPES
     16          - NONE
     17          
     18          PUBLIC FUNCTIONS
     19          - 
     20          
     21          PROTECTED FUNCTIONS
     22          - 
     23          
     24          ***********************************************************************************************************************/
     25          
     26          #include "configuration.h"
     27          
     28          /***********************************************************************************************************************
     29          Global variable definitions with scope across entire project.
     30          All Global variable names shall start with "G_xxBsp"
     31          ***********************************************************************************************************************/
     32          /* New variables */
     33          
     34          /*! LED locations: order must correspond to the order set in LedNameType in the header file. */

   \                                 In section .rodata, align 4
     35          const PinConfigurationType G_asBspLedConfigurations[U8_TOTAL_LEDS] = { {PB_13_LED_WHT, PORTB, ACTIVE_HIGH}, 
   \                     G_asBspLedConfigurations:
   \   00000000   0x00002000         DC32 8192
   \   00000004   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000008   0x00004000         DC32 16384
   \   0000000C   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000010   0x00040000         DC32 262144
   \   00000014   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000018   0x00010000         DC32 65536
   \   0000001C   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000020   0x00080000         DC32 524288
   \   00000024   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000028   0x00020000         DC32 131072
   \   0000002C   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000030   0x00008000         DC32 32768
   \   00000034   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000038   0x00100000         DC32 1048576
   \   0000003C   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000040   0x00000400         DC32 1024
   \   00000044   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000048   0x00000800         DC32 2048
   \   0000004C   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
   \   00000050   0x00001000         DC32 4096
   \   00000054   0x80 0x01          DC8 128, 1, 0, 0
   \              0x00 0x00    
     36                                                                                 {PB_14_LED_PRP, PORTB, ACTIVE_HIGH}, 
     37                                                                                 {PB_18_LED_BLU, PORTB, ACTIVE_HIGH}, 
     38                                                                                 {PB_16_LED_CYN, PORTB, ACTIVE_HIGH},
     39                                                                                 {PB_19_LED_GRN, PORTB, ACTIVE_HIGH}, 
     40                                                                                 {PB_17_LED_YLW, PORTB, ACTIVE_HIGH}, 
     41                                                                                 {PB_15_LED_ORG, PORTB, ACTIVE_HIGH}, 
     42                                                                                 {PB_20_LED_RED, PORTB, ACTIVE_HIGH},
     43                                                                                 {PB_10_LCD_BL_RED, PORTB, ACTIVE_HIGH}, 
     44                                                                                 {PB_11_LCD_BL_GRN, PORTB, ACTIVE_HIGH}, 
     45                                                                                 {PB_12_LCD_BL_BLU, PORTB, ACTIVE_HIGH} 
     46                                                                                };
     47          
     48          
     49          
     50          
     51          /*! Button locations: order must correspond to the order set in ButtonNameType in the header file. */

   \                                 In section .rodata, align 4
     52          const PinConfigurationType G_asBspButtonConfigurations[U8_TOTAL_BUTTONS] = { {PA_17_BUTTON0, PORTA, ACTIVE_LOW}, 
   \                     G_asBspButtonConfigurations:
   \   00000000   0x00020000         DC32 131072
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000008   0x00000001         DC32 1
   \   0000000C   0x80 0x00          DC8 128, 0, 0, 0
   \              0x00 0x00    
   \   00000010   0x00000002         DC32 2
   \   00000014   0x80 0x00          DC8 128, 0, 0, 0
   \              0x00 0x00    
   \   00000018   0x00000004         DC32 4
   \   0000001C   0x80 0x00          DC8 128, 0, 0, 0
   \              0x00 0x00    
     53                                                                                       {PB_00_BUTTON1, PORTB, ACTIVE_LOW}, 
     54                                                                                       {PB_01_BUTTON2, PORTB, ACTIVE_LOW}, 
     55                                                                                       {PB_02_BUTTON3, PORTB, ACTIVE_LOW},
     56                                                                                     };
     57          
     58          
     59          /*--------------------------------------------------------------------------------------------------------------------*/
     60          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     61          extern volatile u32 G_u32SystemTime1ms;        /*!< @brief From main.c */
     62          extern volatile u32 G_u32SystemTime1s;         /*!< @brief From main.c */
     63          extern volatile u32 G_u32SystemFlags;          /*!< @brief From main.c */
     64          extern volatile u32 G_u32ApplicationFlags;     /*!< @brief From main.c */
     65          
     66          extern volatile u32 G_u32DebugFlags;           /*!< @brief From debug.c */
     67          
     68          
     69          /***********************************************************************************************************************
     70          Global variable definitions with scope limited to this local application.
     71          Variable names shall start with "Bsp_" and be declared as static.
     72          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     73          static u32 Bsp_u32TimingViolationsCounter = 0;        
   \                     Bsp_u32TimingViolationsCounter:
   \   00000000                      DS8 4
     74          
     75          
     76          /***********************************************************************************************************************
     77          Function Definitions
     78          ***********************************************************************************************************************/
     79          
     80          
     81          /*--------------------------------------------------------------------------------------------------------------------*/
     82          /*! @protectedsection */                                                                                            
     83          /*--------------------------------------------------------------------------------------------------------------------*/
     84          
     85          /*!---------------------------------------------------------------------------------------------------------------------
     86          @fn void WatchDogSetup(void)
     87          
     88          @brief Configures the watchdog timer.  
     89          
     90          The dog runs at 32kHz from the slow built-in RC clock source which varies 
     91          over operating conditions from 20kHz to 44kHz.
     92          
     93          Since the main loop time / sleep time should be 1 ms most of the time, choosing a value
     94          of 5 seconds should be plenty to avoid watchdog resets.  
     95          
     96          Note: the processor allows the WDMR register to be written just once after a reset.
     97          
     98          Requires:
     99          - SLCK is active at about 32kHz
    100          
    101          Promises:
    102          - Watchdog is set for 5 second timeout
    103          
    104          */

   \                                 In section .text, align 2, keep-with-next
    105          void WatchDogSetup(void)
    106          {
    107            AT91C_BASE_WDTC->WDTC_WDMR = WDT_MR_INIT;
   \                     WatchDogSetup: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9  ;; 0x1fff6500
   \   00000002   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400e1254
   \   00000004   0x6008             STR      R0,[R1, #+0]
    108           
    109          } /* end WatchDogSetup() */
   \   00000006   0x4770             BX       LR               ;; return
    110          
    111          
    112          /*!---------------------------------------------------------------------------------------------------------------------
    113          @fn void ClockSetup(void)
    114          
    115          @brief Loads all registers required to set up the processor clocks.
    116          
    117          Requires:
    118          - NONE
    119          
    120          Promises:
    121          - EFC is set up with proper flash access wait states based on 48MHz system clock
    122          - PMC is set up with proper oscillators and clock sources
    123          
    124          */

   \                                 In section .text, align 2, keep-with-next
    125          void ClockSetup(void)
    126          {
    127            /* Set flash wait states to allow 48 MHz system clock (2 wait states required) */
    128            AT91C_BASE_EFC0->EFC_FMR = AT91C_EFC_FWS_2WS;
   \                     ClockSetup: (+1)
   \   00000000   0xF44F 0x7000      MOV      R0,#+512
   \   00000004   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400e0800
   \   00000006   0x6008             STR      R0,[R1, #+0]
    129          
    130            /* Activate the peripheral clocks needed for the system */
    131            AT91C_BASE_PMC->PMC_PCER = PMC_PCER_INIT;
   \   00000008   0x....             LDR.N    R0,??DataTable9_3  ;; 0x27fced73
   \   0000000A   0x....             LDR.N    R1,??DataTable9_4  ;; 0x400e0410
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    132          
    133            /* Enable the master clock on the PKC0 clock out pin (PA_27_CLOCK_OUT) */
    134            AT91C_BASE_PMC->PMC_PCKR[0] = AT91C_PMC_CSS_SYS_CLK | AT91C_PMC_PRES_CLK;
   \   0000000E   0x2004             MOVS     R0,#+4
   \   00000010   0x....             LDR.N    R1,??DataTable9_5  ;; 0x400e0440
   \   00000012   0x6008             STR      R0,[R1, #+0]
    135            AT91C_BASE_PMC->PMC_SCER = AT91C_PMC_PCK0;
   \   00000014   0xF44F 0x7080      MOV      R0,#+256
   \   00000018   0x....             LDR.N    R1,??DataTable9_6  ;; 0x400e0400
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    136          
    137            /* Turn on the main oscillator and wait for it to start up */
    138            AT91C_BASE_PMC->PMC_MOR = PMC_MOR_INIT;
   \   0000001C   0x....             LDR.N    R0,??DataTable9_7  ;; 0x37f019
   \   0000001E   0x....             LDR.N    R1,??DataTable9_8  ;; 0x400e0420
   \   00000020   0x6008             STR      R0,[R1, #+0]
    139            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCXTS) );
   \                     ??ClockSetup_0: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400e0468
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x07C0             LSLS     R0,R0,#+31
   \   00000028   0xD5FB             BPL.N    ??ClockSetup_0
    140          
    141            /* Assign main clock as crystal */
    142            AT91C_BASE_PMC->PMC_MOR |= (AT91C_CKGR_MOSCSEL | MOR_KEY);
   \   0000002A   0x....             LDR.N    R0,??DataTable9_8  ;; 0x400e0420
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x....             LDR.N    R1,??DataTable9_10  ;; 0x1370000
   \   00000030   0x4308             ORRS     R0,R1,R0
   \   00000032   0x....             LDR.N    R1,??DataTable9_8  ;; 0x400e0420
   \   00000034   0x6008             STR      R0,[R1, #+0]
    143            
    144            /* Initialize PLLA and wait for lock */
    145            AT91C_BASE_PMC->PMC_PLLAR = PMC_PLAAR_INIT;
   \   00000036   0x....             LDR.N    R0,??DataTable9_11  ;; 0x20073f01
   \   00000038   0x....             LDR.N    R1,??DataTable9_12  ;; 0x400e0428
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    146            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKA) );
   \                     ??ClockSetup_1: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400e0468
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x0780             LSLS     R0,R0,#+30
   \   00000042   0xD5FB             BPL.N    ??ClockSetup_1
    147            
    148            /* Assign the PLLA as the main system clock with prescaler active using the sequence suggested in the user guide */
    149            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_INIT;
   \   00000044   0xF242 0x0011      MOVW     R0,#+8209
   \   00000048   0x....             LDR.N    R1,??DataTable9_13  ;; 0x400e0430
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    150            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_2: (+1)
   \   0000004C   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400e0468
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0700             LSLS     R0,R0,#+28
   \   00000052   0xD5FB             BPL.N    ??ClockSetup_2
    151            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_PLLA;
   \   00000054   0xF242 0x0012      MOVW     R0,#+8210
   \   00000058   0x....             LDR.N    R1,??DataTable9_13  ;; 0x400e0430
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    152            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_3: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400e0468
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x0700             LSLS     R0,R0,#+28
   \   00000062   0xD5FB             BPL.N    ??ClockSetup_3
    153          
    154            /* Initialize UTMI for USB usage */
    155            AT91C_BASE_CKGR->CKGR_UCKR |= (AT91C_CKGR_UPLLCOUNT & (3 << 20)) | AT91C_CKGR_UPLLEN;
   \   00000064   0x....             LDR.N    R0,??DataTable9_14  ;; 0x400e041c
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF450 0x1044      ORRS     R0,R0,#0x310000
   \   0000006C   0x....             LDR.N    R1,??DataTable9_14  ;; 0x400e041c
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    156            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKU) ); 
   \                     ??ClockSetup_4: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400e0468
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x0640             LSLS     R0,R0,#+25
   \   00000076   0xD5FB             BPL.N    ??ClockSetup_4
    157            
    158          } /* end ClockSetup */
   \   00000078   0x4770             BX       LR               ;; return
    159          
    160          
    161          /*!---------------------------------------------------------------------------------------------------------------------
    162          @fn void GpioSetup(void)
    163          
    164          @brief Loads registers required to set up GPIO on the processor.
    165          
    166          Requires:
    167          - All configurations must match connected hardware.
    168          
    169          Promises:
    170          - Output pin for PA31_HEARTBEAT is configured
    171          
    172          */

   \                                 In section .text, align 2, keep-with-next
    173          void GpioSetup(void)
    174          {
    175            /* Set all of the pin function registers in port A */
    176            AT91C_BASE_PIOA->PIO_PER    =  PIOA_PER_INIT;
   \                     GpioSetup: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_15  ;; 0x84030007
   \   00000002   0x....             LDR.N    R1,??DataTable9_16  ;; 0x400e0c00
   \   00000004   0x6008             STR      R0,[R1, #+0]
    177            AT91C_BASE_PIOA->PIO_PDR    = ~PIOA_PER_INIT;
   \   00000006   0x....             LDR.N    R0,??DataTable9_17  ;; 0x7bfcfff8
   \   00000008   0x....             LDR.N    R1,??DataTable9_18  ;; 0x400e0c04
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    178            AT91C_BASE_PIOA->PIO_OER    =  PIOA_OER_INIT;
   \   0000000C   0x....             LDR.N    R0,??DataTable9_19  ;; 0x84010001
   \   0000000E   0x....             LDR.N    R1,??DataTable9_20  ;; 0x400e0c10
   \   00000010   0x6008             STR      R0,[R1, #+0]
    179            AT91C_BASE_PIOA->PIO_ODR    = ~PIOA_OER_INIT;
   \   00000012   0x....             LDR.N    R0,??DataTable9_21  ;; 0x7bfefffe
   \   00000014   0x....             LDR.N    R1,??DataTable9_22  ;; 0x400e0c14
   \   00000016   0x6008             STR      R0,[R1, #+0]
    180            AT91C_BASE_PIOA->PIO_IFER   =  PIOA_IFER_INIT;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable9_23  ;; 0x400e0c20
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    181            AT91C_BASE_PIOA->PIO_IFDR   = ~PIOA_IFER_INIT;
   \   0000001E   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000022   0x....             LDR.N    R1,??DataTable9_24  ;; 0x400e0c24
   \   00000024   0x6008             STR      R0,[R1, #+0]
    182            AT91C_BASE_PIOA->PIO_MDER   =  PIOA_MDER_INIT;
   \   00000026   0x....             LDR.N    R0,??DataTable9_25  ;; 0x4000600
   \   00000028   0x....             LDR.N    R1,??DataTable9_26  ;; 0x400e0c50
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    183            AT91C_BASE_PIOA->PIO_MDDR   = ~PIOA_MDER_INIT;
   \   0000002C   0x....             LDR.N    R0,??DataTable9_27  ;; 0xfbfff9ff
   \   0000002E   0x....             LDR.N    R1,??DataTable9_28  ;; 0x400e0c54
   \   00000030   0x6008             STR      R0,[R1, #+0]
    184            AT91C_BASE_PIOA->PIO_PPUER  =  PIOA_PPUER_INIT;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable9_29  ;; 0x400e0c64
   \   00000036   0x6008             STR      R0,[R1, #+0]
    185            AT91C_BASE_PIOA->PIO_PPUDR  = ~PIOA_PPUER_INIT;
   \   00000038   0xF07F 0x0001      MVNS     R0,#+1
   \   0000003C   0x....             LDR.N    R1,??DataTable9_30  ;; 0x400e0c60
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    186            AT91C_BASE_PIOA->PIO_OWER   =  PIOA_OWER_INIT;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable9_31  ;; 0x400e0ca0
   \   00000044   0x6008             STR      R0,[R1, #+0]
    187            AT91C_BASE_PIOA->PIO_OWDR   = ~PIOA_OWER_INIT;
   \   00000046   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000004A   0x....             LDR.N    R1,??DataTable9_32  ;; 0x400e0ca4
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    188            
    189            AT91C_BASE_PIOA->PIO_SODR   = PIOA_SODR_INIT;
   \   0000004E   0x....             LDR.N    R0,??DataTable9_33  ;; 0x88010000
   \   00000050   0x....             LDR.N    R1,??DataTable9_34  ;; 0x400e0c30
   \   00000052   0x6008             STR      R0,[R1, #+0]
    190            AT91C_BASE_PIOA->PIO_CODR   = PIOA_CODR_INIT;
   \   00000054   0xF05F 0x5040      MOVS     R0,#+805306368
   \   00000058   0x....             LDR.N    R1,??DataTable9_35  ;; 0x400e0c34
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    191            AT91C_BASE_PIOA->PIO_ABSR   = PIOA_ABSR_INIT;
   \   0000005C   0xF05F 0x40F6      MOVS     R0,#+2063597568
   \   00000060   0x....             LDR.N    R1,??DataTable9_36  ;; 0x400e0c70
   \   00000062   0x6008             STR      R0,[R1, #+0]
    192            AT91C_BASE_PIOA->PIO_SCIFSR = PIOA_SCIFSR_INIT;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x....             LDR.N    R1,??DataTable9_37  ;; 0x400e0c80
   \   00000068   0x6008             STR      R0,[R1, #+0]
    193            AT91C_BASE_PIOA->PIO_DIFSR  = PIOA_DIFSR_INIT;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x....             LDR.N    R1,??DataTable9_38  ;; 0x400e0c84
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    194            AT91C_BASE_PIOA->PIO_SCDR   = PIOA_SCDR_INIT;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x....             LDR.N    R1,??DataTable9_39  ;; 0x400e0c8c
   \   00000074   0x6008             STR      R0,[R1, #+0]
    195            
    196            /* Set all of the pin function registers in port B */
    197            AT91C_BASE_PIOB->PIO_PER    =  PIOB_PER_INIT;
   \   00000076   0x....             LDR.N    R0,??DataTable9_40  ;; 0x1bfff57
   \   00000078   0x....             LDR.N    R1,??DataTable9_41  ;; 0x400e0e00
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    198            AT91C_BASE_PIOB->PIO_PDR    = ~PIOB_PER_INIT;
   \   0000007C   0x....             LDR.N    R0,??DataTable9_42  ;; 0xfe4000a8
   \   0000007E   0x....             LDR.N    R1,??DataTable9_43  ;; 0x400e0e04
   \   00000080   0x6008             STR      R0,[R1, #+0]
    199            AT91C_BASE_PIOB->PIO_OER    =  PIOB_OER_INIT;
   \   00000082   0x....             LDR.N    R0,??DataTable9_44  ;; 0x1bfffe0
   \   00000084   0x....             LDR.N    R1,??DataTable9_45  ;; 0x400e0e10
   \   00000086   0x6008             STR      R0,[R1, #+0]
    200            AT91C_BASE_PIOB->PIO_ODR    = ~PIOB_OER_INIT;
   \   00000088   0x....             LDR.N    R0,??DataTable9_46  ;; 0xfe40001f
   \   0000008A   0x....             LDR.N    R1,??DataTable9_47  ;; 0x400e0e14
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    201            AT91C_BASE_PIOB->PIO_IFER   =  PIOB_IFER_INIT;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x....             LDR.N    R1,??DataTable9_48  ;; 0x400e0e20
   \   00000092   0x6008             STR      R0,[R1, #+0]
    202            AT91C_BASE_PIOB->PIO_IFDR   = ~PIOB_IFER_INIT;
   \   00000094   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000098   0x....             LDR.N    R1,??DataTable9_49  ;; 0x400e0e24
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    203            AT91C_BASE_PIOB->PIO_MDER   =  PIOB_MDER_INIT;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x....             LDR.N    R1,??DataTable9_50  ;; 0x400e0e50
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    204            AT91C_BASE_PIOB->PIO_MDDR   = ~PIOB_MDER_INIT;
   \   000000A2   0xF05F 0x30FF      MOVS     R0,#-1
   \   000000A6   0x....             LDR.N    R1,??DataTable9_51  ;; 0x400e0e54
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    205            AT91C_BASE_PIOB->PIO_PPUER  =  PIOB_PPUER_INIT;
   \   000000AA   0xF44F 0x70E0      MOV      R0,#+448
   \   000000AE   0x....             LDR.N    R1,??DataTable9_52  ;; 0x400e0e64
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    206            AT91C_BASE_PIOB->PIO_PPUDR  = ~PIOB_PPUER_INIT;
   \   000000B2   0xF47F 0x70E0      MVNS     R0,#+448
   \   000000B6   0x....             LDR.N    R1,??DataTable9_53  ;; 0x400e0e60
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    207            AT91C_BASE_PIOB->PIO_OWER   =  PIOB_OWER_INIT;
   \   000000BA   0x....             LDR.N    R0,??DataTable9_54  ;; 0x1ffc00
   \   000000BC   0x....             LDR.N    R1,??DataTable9_55  ;; 0x400e0ea0
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    208            AT91C_BASE_PIOB->PIO_OWDR   = ~PIOB_OWER_INIT;
   \   000000C0   0x....             LDR.N    R0,??DataTable9_56  ;; 0xffe003ff
   \   000000C2   0x....             LDR.N    R1,??DataTable9_57  ;; 0x400e0ea4
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    209            
    210            AT91C_BASE_PIOB->PIO_SODR   = PIOB_SODR_INIT;
   \   000000C6   0x....             LDR.N    R0,??DataTable9_58  ;; 0x1a00200
   \   000000C8   0x....             LDR.N    R1,??DataTable9_59  ;; 0x400e0e30
   \   000000CA   0x6008             STR      R0,[R1, #+0]
    211            AT91C_BASE_PIOB->PIO_CODR   = PIOB_CODR_INIT;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x....             LDR.N    R1,??DataTable9_60  ;; 0x400e0e34
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    212            AT91C_BASE_PIOB->PIO_ABSR   = PIOB_ABSR_INIT;
   \   000000D2   0x....             LDR.N    R0,??DataTable9_61  ;; 0x400018
   \   000000D4   0x....             LDR.N    R1,??DataTable9_62  ;; 0x400e0e70
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    213            AT91C_BASE_PIOB->PIO_SCIFSR = PIOB_SCIFSR_INIT;
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x....             LDR.N    R1,??DataTable9_63  ;; 0x400e0e80
   \   000000DC   0x6008             STR      R0,[R1, #+0]
    214            AT91C_BASE_PIOB->PIO_DIFSR  = PIOB_DIFSR_INIT;
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x....             LDR.N    R1,??DataTable9_64  ;; 0x400e0e84
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    215            AT91C_BASE_PIOB->PIO_SCDR   = PIOB_SCDR_INIT;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x....             LDR.N    R1,??DataTable9_65  ;; 0x400e0e8c
   \   000000E8   0x6008             STR      R0,[R1, #+0]
    216            
    217          } /* end GpioSetup() */
   \   000000EA   0x4770             BX       LR               ;; return
    218          
    219          
    220          /*!---------------------------------------------------------------------------------------------------------------------
    221          @fn  void SysTickSetup(void)
    222          
    223          @brief Initializes the 1ms and 1s System Ticks off the core timer.
    224          
    225          Requires:
    226          - NVIC is setup and SysTick handler is installed
    227          
    228          Promises:
    229          - Both global system timers are reset and the SysTick core timer is configured for 1ms intervals
    230          
    231          */

   \                                 In section .text, align 2, keep-with-next
    232          void SysTickSetup(void)
    233          {
    234            G_u32SystemTime1ms = 0;      
   \                     SysTickSetup: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable9_66
   \   00000004   0x6008             STR      R0,[R1, #+0]
    235            G_u32SystemTime1s  = 0;   
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x....             LDR.N    R1,??DataTable9_67
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    236            
    237            /* Load the SysTick Counter Value */
    238            AT91C_BASE_NVIC->NVIC_STICKRVR = U32_SYSTICK_COUNT - 1; 
   \   0000000C   0xF241 0x706F      MOVW     R0,#+5999
   \   00000010   0x....             LDR.N    R1,??DataTable9_68  ;; 0xe000e014
   \   00000012   0x6008             STR      R0,[R1, #+0]
    239            AT91C_BASE_NVIC->NVIC_STICKCVR = (0x00);                                                              
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR.N    R1,??DataTable9_69  ;; 0xe000e018
   \   00000018   0x6008             STR      R0,[R1, #+0]
    240            AT91C_BASE_NVIC->NVIC_STICKCSR = SYSTICK_CTRL_INIT;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0x....             LDR.N    R1,??DataTable9_70  ;; 0xe000e010
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    241           
    242          } /* end SysTickSetup() */
   \   00000020   0x4770             BX       LR               ;; return
    243          
    244          
    245          /*!---------------------------------------------------------------------------------------------------------------------
    246          @fn void SystemTimeCheck(void)
    247          
    248          @brief Checks for violations of the 1ms system loop time.
    249          
    250          Requires:
    251          - Should be called only once in the main system loop
    252          
    253          Promises:
    254          @Bsp_u32TimingViolationsCounter is incremented if G_u32SystemTime1ms has
    255          increased by more than one since this function was last called
    256          
    257          */

   \                                 In section .text, align 2, keep-with-next
    258          void SystemTimeCheck(void)
    259          {    
   \                     SystemTimeCheck: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    260             static u32 u32PreviousSystemTick = 0;
    261             
    262            /* Check system timing */
    263            if( (G_u32SystemTime1ms - u32PreviousSystemTick) != 1)
   \   00000002   0x....             LDR.N    R0,??DataTable9_66
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable9_71
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x1A40             SUBS     R0,R0,R1
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD017             BEQ.N    ??SystemTimeCheck_0
    264            {
    265              /* Flag, count and optionally display warning */
    266              Bsp_u32TimingViolationsCounter++;
   \   00000010   0x....             LDR.N    R0,??DataTable9_72
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable9_72
   \   00000018   0x6008             STR      R0,[R1, #+0]
    267              G_u32SystemFlags |= _SYSTEM_TIME_WARNING;
   \   0000001A   0x....             LDR.N    R0,??DataTable9_73
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000022   0x....             LDR.N    R1,??DataTable9_73
   \   00000024   0x6008             STR      R0,[R1, #+0]
    268              
    269              if(G_u32DebugFlags & _DEBUG_TIME_WARNING_ENABLE)
   \   00000026   0x....             LDR.N    R0,??DataTable9_74
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x0780             LSLS     R0,R0,#+30
   \   0000002C   0xD508             BPL.N    ??SystemTimeCheck_0
    270              {
    271                DebugPrintf("\n\r*** 1ms timing violation: ");
   \   0000002E   0x....             LDR.N    R0,??DataTable9_75
   \   00000030   0x.... 0x....      BL       DebugPrintf
    272                DebugPrintNumber(Bsp_u32TimingViolationsCounter);
   \   00000034   0x....             LDR.N    R0,??DataTable9_72
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x.... 0x....      BL       DebugPrintNumber
    273                DebugLineFeed();
   \   0000003C   0x.... 0x....      BL       DebugLineFeed
    274              }
    275            }
    276            
    277            u32PreviousSystemTick = G_u32SystemTime1ms;
   \                     ??SystemTimeCheck_0: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable9_66
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x....             LDR.N    R1,??DataTable9_71
   \   00000046   0x6008             STR      R0,[R1, #+0]
    278            
    279          } /* end SystemTimeCheck() */
   \   00000048   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??u32PreviousSystemTick:
   \   00000000                      DS8 4
    280          
    281          
    282          /*!---------------------------------------------------------------------------------------------------------------------
    283          @fn void SystemSleep(void)
    284          
    285          @brief Puts the system into sleep mode.  
    286          
    287          _SYSTEM_SLEEPING is set here so if the system wakes up because of a non-Systick
    288          interrupt, it can go back to sleep.
    289          
    290          Deep sleep mode is currently disabled, so maximum processor power savings are 
    291          not yet realized.  To enable deep sleep, there are certain considerations for 
    292          waking up that would need to be taken care of.
    293          
    294          Requires:
    295          - SysTick is running with interrupt enabled for wake from Sleep LPM
    296          
    297          Promises:
    298          - Configures processor for sleep while still allowing any required
    299            interrupt to wake it up.
    300          - G_u32SystemFlags _SYSTEM_SLEEPING is set
    301          
    302          */

   \                                 In section .text, align 2, keep-with-next
    303          void SystemSleep(void)
    304          {    
    305            /* Set the system control register for Sleep (but not Deep Sleep) */
    306            AT91C_BASE_PMC->PMC_FSMR &= ~AT91C_PMC_LPM;
   \                     SystemSleep: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_76  ;; 0x400e0470
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x1080      BICS     R0,R0,#0x100000
   \   00000008   0x....             LDR.N    R1,??DataTable9_76  ;; 0x400e0470
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    307            AT91C_BASE_NVIC->NVIC_SCR &= ~AT91C_NVIC_SLEEPDEEP;
   \   0000000C   0x....             LDR.N    R0,??DataTable9_77  ;; 0xe000ed10
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000014   0x....             LDR.N    R1,??DataTable9_77  ;; 0xe000ed10
   \   00000016   0x6008             STR      R0,[R1, #+0]
    308             
    309            /* Set the sleep flag (cleared only in SysTick ISR */
    310            G_u32SystemFlags |= _SYSTEM_SLEEPING;
   \   00000018   0x....             LDR.N    R0,??DataTable9_73
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   00000020   0x....             LDR.N    R1,??DataTable9_73
   \   00000022   0x6008             STR      R0,[R1, #+0]
    311          
    312            /* Now enter the selected LPM */
    313            while(G_u32SystemFlags & _SYSTEM_SLEEPING)
   \                     ??SystemSleep_0: (+1)
   \   00000024   0x....             LDR.N    R0,??DataTable9_73
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x0040             LSLS     R0,R0,#+1
   \   0000002A   0xD501             BPL.N    ??SystemSleep_1
    314            {
    315              __WFI();
   \   0000002C   0xBF30             WFI      
   \   0000002E   0xE7F9             B.N      ??SystemSleep_0
    316            }
    317            
    318          } /* end SystemSleep(void) */
   \                     ??SystemSleep_1: (+1)
   \   00000030   0x4770             BX       LR               ;; return
    319          
    320          
    321          /*!---------------------------------------------------------------------------------------------------------------------
    322          @fn void PWMSetupAudio(void)
    323          
    324          @brief Configures the PWM peripheral for audio operation on H0 and H1 channels.
    325          
    326          Requires:
    327          - Peripheral resources not used for any other function.
    328          
    329          Promises:
    330          - PWM is configured for PWM mode and currently off.
    331          
    332          */

   \                                 In section .text, align 2, keep-with-next
    333          void PWMSetupAudio(void)
    334          {
    335            /* Set all intialization values */
    336            AT91C_BASE_PWMC->PWMC_CLK = PWM_CLK_INIT;
   \                     PWMSetupAudio: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable9_78  ;; 0x4008c000
   \   00000004   0x6008             STR      R0,[R1, #+0]
    337            
    338            AT91C_BASE_PWMC_CH0->PWMC_CMR = PWM_CMR0_INIT;
   \   00000006   0x2003             MOVS     R0,#+3
   \   00000008   0x....             LDR.N    R1,??DataTable9_79  ;; 0x4008c200
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    339            AT91C_BASE_PWMC_CH0->PWMC_CPRDR    = PWM_CPRD0_INIT; /* Set current frequency */
   \   0000000C   0xF241 0x7070      MOVW     R0,#+6000
   \   00000010   0x....             LDR.N    R1,??DataTable9_80  ;; 0x4008c20c
   \   00000012   0x6008             STR      R0,[R1, #+0]
    340            AT91C_BASE_PWMC_CH0->PWMC_CPRDUPDR = PWM_CPRD0_INIT; /* Latch CPRD values */
   \   00000014   0xF241 0x7070      MOVW     R0,#+6000
   \   00000018   0x....             LDR.N    R1,??DataTable9_81  ;; 0x4008c210
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    341            AT91C_BASE_PWMC_CH0->PWMC_CDTYR    = PWM_CDTY0_INIT; /* Set 50% duty */
   \   0000001C   0xF642 0x60E0      MOVW     R0,#+12000
   \   00000020   0x....             LDR.N    R1,??DataTable9_82  ;; 0x4008c204
   \   00000022   0x6008             STR      R0,[R1, #+0]
    342            AT91C_BASE_PWMC_CH0->PWMC_CDTYUPDR = PWM_CDTY0_INIT; /* Latch CDTY values */
   \   00000024   0xF642 0x60E0      MOVW     R0,#+12000
   \   00000028   0x....             LDR.N    R1,??DataTable9_83  ;; 0x4008c208
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    343          
    344            AT91C_BASE_PWMC_CH1->PWMC_CMR = PWM_CMR1_INIT;
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x....             LDR.N    R1,??DataTable9_84  ;; 0x4008c220
   \   00000030   0x6008             STR      R0,[R1, #+0]
    345            AT91C_BASE_PWMC_CH1->PWMC_CPRDR    = PWM_CPRD1_INIT; /* Set current frequency  */
   \   00000032   0xF240 0x50DC      MOVW     R0,#+1500
   \   00000036   0x....             LDR.N    R1,??DataTable9_85  ;; 0x4008c22c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    346            AT91C_BASE_PWMC_CH1->PWMC_CPRDUPDR = PWM_CPRD1_INIT; /* Latch CPRD values */
   \   0000003A   0xF240 0x50DC      MOVW     R0,#+1500
   \   0000003E   0x....             LDR.N    R1,??DataTable9_86  ;; 0x4008c230
   \   00000040   0x6008             STR      R0,[R1, #+0]
    347            AT91C_BASE_PWMC_CH1->PWMC_CDTYR    = PWM_CDTY1_INIT; /* Set 50% duty */
   \   00000042   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000046   0x....             LDR.N    R1,??DataTable9_87  ;; 0x4008c224
   \   00000048   0x6008             STR      R0,[R1, #+0]
    348            AT91C_BASE_PWMC_CH1->PWMC_CDTYUPDR = PWM_CDTY1_INIT; /* Latch CDTY values */
   \   0000004A   0xF640 0x30B8      MOVW     R0,#+3000
   \   0000004E   0x....             LDR.N    R1,??DataTable9_88  ;; 0x4008c228
   \   00000050   0x6008             STR      R0,[R1, #+0]
    349          
    350            
    351          } /* end PWMSetupAudio() */
   \   00000052   0x4770             BX       LR               ;; return
    352          
    353          
    354          /*--------------------------------------------------------------------------------------------------------------------*/
    355          /*! @publicsection */                                                                                            
    356          /*--------------------------------------------------------------------------------------------------------------------*/
    357          
    358          /*!---------------------------------------------------------------------------------------------------------------------
    359          @fn void PWMAudioSetFrequency(BuzzerChannelType eChannel_, u16 u16Frequency_)
    360          
    361          @brief Configures the PWM peripheral with the desired frequency on the specified channel.
    362          
    363          If the buzzer is already on, it will change frequency (essentially) immediately.  
    364          If it is not on, the new frequency will be audible next time PWMAudioOn() is called.
    365          
    366          Example:
    367          
    368          PWMAudioSetFrequency(BUZZER1, 1000);
    369          
    370          Requires:
    371          - The PWM peripheral is correctly configured for the current processor clock speed.
    372          - CPRE_CLCK is the clock frequency for the PWM peripheral
    373          
    374          @param eChannel_ is the channel of interest and corresponds to the channel bit 
    375          position of the buzzer in the PWM peripheral
    376          @param u16Frequency_ is in Hertz and should be in the range 100 - 20,000 since
    377                 that is the audible range.  Higher and lower frequencies are allowed, though.
    378          
    379          Promises:
    380          - The frequency and duty cycle values for the requested channel are calculated
    381            and then latched to their respective update registers (CPRDUPDR, CDTYUPDR)
    382          - If the channel is not valid, nothing happens
    383          
    384          */

   \                                 In section .text, align 2, keep-with-next
    385          void PWMAudioSetFrequency(BuzzerChannelType eChannel_, u16 u16Frequency_)
    386          {
   \                     PWMAudioSetFrequency: (+1)
   \   00000000   0xB410             PUSH     {R4}
    387            u32 u32ChannelPeriod;
    388            AT91PS_PWMC_CH psChannelAddress;
    389            
    390            /* Get the base address of the channel */
    391            switch (eChannel_)
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x2C01             CMP      R4,#+1
   \   00000008   0xD002             BEQ.N    ??PWMAudioSetFrequency_0
   \   0000000A   0x2C02             CMP      R4,#+2
   \   0000000C   0xD003             BEQ.N    ??PWMAudioSetFrequency_1
   \   0000000E   0xE005             B.N      ??PWMAudioSetFrequency_2
    392            {
    393              case BUZZER1:
    394              {
    395                psChannelAddress = AT91C_BASE_PWMC_CH0;
   \                     ??PWMAudioSetFrequency_0: (+1)
   \   00000010   0x....             LDR.N    R4,??DataTable9_79  ;; 0x4008c200
   \   00000012   0x0023             MOVS     R3,R4
    396                break;
   \   00000014   0xE003             B.N      ??PWMAudioSetFrequency_3
    397              }
    398          
    399              case BUZZER2:
    400              {
    401                psChannelAddress = AT91C_BASE_PWMC_CH1;
   \                     ??PWMAudioSetFrequency_1: (+1)
   \   00000016   0x....             LDR.N    R4,??DataTable9_84  ;; 0x4008c220
   \   00000018   0x0023             MOVS     R3,R4
    402                break;
   \   0000001A   0xE000             B.N      ??PWMAudioSetFrequency_3
    403              }
    404          
    405              default:
    406              {
    407                /* Invalid channel */
    408                return;
   \                     ??PWMAudioSetFrequency_2: (+1)
   \   0000001C   0xE010             B.N      ??PWMAudioSetFrequency_4
    409              }
    410            }
    411          
    412            /* Calculate the period based on the requested frequency.
    413            The duty cycle is this value divided by 2 (right shift 1) */
    414            u32ChannelPeriod = CPRE_CLCK / u16Frequency_;
   \                     ??PWMAudioSetFrequency_3: (+1)
   \   0000001E   0x....             LDR.N    R4,??DataTable9_89  ;; 0x5b8d80
   \   00000020   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000022   0xFBB4 0xF4F1      UDIV     R4,R4,R1
   \   00000026   0x0022             MOVS     R2,R4
    415            
    416            /* Set different registers depending on if PWM is already running */
    417            if (AT91C_BASE_PWMC->PWMC_SR & eChannel_)
   \   00000028   0x....             LDR.N    R4,??DataTable9_90  ;; 0x4008c00c
   \   0000002A   0x6824             LDR      R4,[R4, #+0]
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x4204             TST      R4,R0
   \   00000030   0xD003             BEQ.N    ??PWMAudioSetFrequency_5
    418            {
    419              /* Beeper is already running, so use update registers */
    420              psChannelAddress->PWMC_CPRDUPDR = u32ChannelPeriod;   
   \   00000032   0x611A             STR      R2,[R3, #+16]
    421              psChannelAddress->PWMC_CDTYUPDR = u32ChannelPeriod >> 1; 
   \   00000034   0x0854             LSRS     R4,R2,#+1
   \   00000036   0x609C             STR      R4,[R3, #+8]
   \   00000038   0xE002             B.N      ??PWMAudioSetFrequency_6
    422            }
    423            else
    424            {
    425              /* Beeper is off, so use direct registers */
    426              psChannelAddress->PWMC_CPRDR = u32ChannelPeriod;
   \                     ??PWMAudioSetFrequency_5: (+1)
   \   0000003A   0x60DA             STR      R2,[R3, #+12]
    427              psChannelAddress->PWMC_CDTYR = u32ChannelPeriod >> 1;
   \   0000003C   0x0854             LSRS     R4,R2,#+1
   \   0000003E   0x605C             STR      R4,[R3, #+4]
    428            }
    429            
    430          } /* end PWMAudioSetFrequency() */
   \                     ??PWMAudioSetFrequency_6: (+1)
   \                     ??PWMAudioSetFrequency_4: (+1)
   \   00000040   0xBC10             POP      {R4}
   \   00000042   0x4770             BX       LR               ;; return
    431          
    432          
    433          /*!---------------------------------------------------------------------------------------------------------------------
    434          @fn void PWMAudioOn(BuzzerChannelType eBuzzerChannel_)
    435          
    436          @brief Enables a PWM channel so the buzzer is on.
    437          
    438          Example:
    439          
    440          PWMAudioOn(BUZZER2);
    441          
    442          Requires:
    443          - All peripheral values should be configured
    444          - Frequency of the desired channel should already be set
    445          
    446          @param eBuzzerChannel_ is a valid BuzzerChannelType (BUZZER1 or BUZZER2)
    447          
    448          Promises:                                                       
    449          - PWM for the selected channel is enabled
    450          
    451          */

   \                                 In section .text, align 2, keep-with-next
    452          void PWMAudioOn(BuzzerChannelType eBuzzerChannel_)
    453          {
    454            /* Enable the channel to turn the buzzer on*/
    455            AT91C_BASE_PWMC->PWMC_ENA = (u32)eBuzzerChannel_;  
   \                     PWMAudioOn: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x....             LDR.N    R1,??DataTable9_91  ;; 0x4008c004
   \   00000004   0x6008             STR      R0,[R1, #+0]
    456          
    457          } /* end PWMAudioOn() */
   \   00000006   0x4770             BX       LR               ;; return
    458          
    459          
    460          /*!---------------------------------------------------------------------------------------------------------------------
    461          @fn void PWMAudioOff(BuzzerChannelType eBuzzerChannel_)
    462          
    463          @brief Disables a PWM channel so the buzzer is off.
    464          
    465          Example:
    466          
    467          PWMAudioOff(BUZZER2);
    468          
    469          
    470          Requires:
    471          @param eBuzzerChannel_ is a valid BuzzerChannelType (BUZZER1 or BUZZER2)
    472          
    473          Promises:
    474          - PWM for the selected channel is disabled
    475          
    476          */

   \                                 In section .text, align 2, keep-with-next
    477          void PWMAudioOff(BuzzerChannelType eBuzzerChannel_)
    478          {
    479            /* Disable the channel to turn the buzzer off */
    480            AT91C_BASE_PWMC->PWMC_DIS = (u32)eBuzzerChannel_;  
   \                     PWMAudioOff: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x....             LDR.N    R1,??DataTable9_92  ;; 0x4008c008
   \   00000004   0x6008             STR      R0,[R1, #+0]
    481          
    482          } /* end PWMAudioOff() */
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x1FFF6500         DC32     0x1fff6500

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x400E1254         DC32     0x400e1254

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x400E0800         DC32     0x400e0800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x27FCED73         DC32     0x27fced73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x400E0410         DC32     0x400e0410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x400E0440         DC32     0x400e0440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x400E0400         DC32     0x400e0400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x0037F019         DC32     0x37f019

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x400E0420         DC32     0x400e0420

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x400E0468         DC32     0x400e0468

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x01370000         DC32     0x1370000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x20073F01         DC32     0x20073f01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x400E0428         DC32     0x400e0428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x400E0430         DC32     0x400e0430

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x400E041C         DC32     0x400e041c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x84030007         DC32     0x84030007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x400E0C00         DC32     0x400e0c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x7BFCFFF8         DC32     0x7bfcfff8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x400E0C04         DC32     0x400e0c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x84010001         DC32     0x84010001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x400E0C10         DC32     0x400e0c10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x7BFEFFFE         DC32     0x7bfefffe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x400E0C14         DC32     0x400e0c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x400E0C20         DC32     0x400e0c20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_24:
   \   00000000   0x400E0C24         DC32     0x400e0c24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_25:
   \   00000000   0x04000600         DC32     0x4000600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_26:
   \   00000000   0x400E0C50         DC32     0x400e0c50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_27:
   \   00000000   0xFBFFF9FF         DC32     0xfbfff9ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_28:
   \   00000000   0x400E0C54         DC32     0x400e0c54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_29:
   \   00000000   0x400E0C64         DC32     0x400e0c64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_30:
   \   00000000   0x400E0C60         DC32     0x400e0c60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_31:
   \   00000000   0x400E0CA0         DC32     0x400e0ca0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_32:
   \   00000000   0x400E0CA4         DC32     0x400e0ca4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_33:
   \   00000000   0x88010000         DC32     0x88010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_34:
   \   00000000   0x400E0C30         DC32     0x400e0c30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_35:
   \   00000000   0x400E0C34         DC32     0x400e0c34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_36:
   \   00000000   0x400E0C70         DC32     0x400e0c70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_37:
   \   00000000   0x400E0C80         DC32     0x400e0c80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_38:
   \   00000000   0x400E0C84         DC32     0x400e0c84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_39:
   \   00000000   0x400E0C8C         DC32     0x400e0c8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_40:
   \   00000000   0x01BFFF57         DC32     0x1bfff57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_41:
   \   00000000   0x400E0E00         DC32     0x400e0e00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_42:
   \   00000000   0xFE4000A8         DC32     0xfe4000a8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_43:
   \   00000000   0x400E0E04         DC32     0x400e0e04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_44:
   \   00000000   0x01BFFFE0         DC32     0x1bfffe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_45:
   \   00000000   0x400E0E10         DC32     0x400e0e10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_46:
   \   00000000   0xFE40001F         DC32     0xfe40001f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_47:
   \   00000000   0x400E0E14         DC32     0x400e0e14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_48:
   \   00000000   0x400E0E20         DC32     0x400e0e20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_49:
   \   00000000   0x400E0E24         DC32     0x400e0e24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_50:
   \   00000000   0x400E0E50         DC32     0x400e0e50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_51:
   \   00000000   0x400E0E54         DC32     0x400e0e54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_52:
   \   00000000   0x400E0E64         DC32     0x400e0e64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_53:
   \   00000000   0x400E0E60         DC32     0x400e0e60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_54:
   \   00000000   0x001FFC00         DC32     0x1ffc00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_55:
   \   00000000   0x400E0EA0         DC32     0x400e0ea0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_56:
   \   00000000   0xFFE003FF         DC32     0xffe003ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_57:
   \   00000000   0x400E0EA4         DC32     0x400e0ea4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_58:
   \   00000000   0x01A00200         DC32     0x1a00200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_59:
   \   00000000   0x400E0E30         DC32     0x400e0e30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_60:
   \   00000000   0x400E0E34         DC32     0x400e0e34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_61:
   \   00000000   0x00400018         DC32     0x400018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_62:
   \   00000000   0x400E0E70         DC32     0x400e0e70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_63:
   \   00000000   0x400E0E80         DC32     0x400e0e80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_64:
   \   00000000   0x400E0E84         DC32     0x400e0e84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_65:
   \   00000000   0x400E0E8C         DC32     0x400e0e8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_66:
   \   00000000   0x........         DC32     G_u32SystemTime1ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_67:
   \   00000000   0x........         DC32     G_u32SystemTime1s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_68:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_69:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_70:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_71:
   \   00000000   0x........         DC32     ??u32PreviousSystemTick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_72:
   \   00000000   0x........         DC32     Bsp_u32TimingViolationsCounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_73:
   \   00000000   0x........         DC32     G_u32SystemFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_74:
   \   00000000   0x........         DC32     G_u32DebugFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_75:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_76:
   \   00000000   0x400E0470         DC32     0x400e0470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_77:
   \   00000000   0xE000ED10         DC32     0xe000ed10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_78:
   \   00000000   0x4008C000         DC32     0x4008c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_79:
   \   00000000   0x4008C200         DC32     0x4008c200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_80:
   \   00000000   0x4008C20C         DC32     0x4008c20c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_81:
   \   00000000   0x4008C210         DC32     0x4008c210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_82:
   \   00000000   0x4008C204         DC32     0x4008c204

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_83:
   \   00000000   0x4008C208         DC32     0x4008c208

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_84:
   \   00000000   0x4008C220         DC32     0x4008c220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_85:
   \   00000000   0x4008C22C         DC32     0x4008c22c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_86:
   \   00000000   0x4008C230         DC32     0x4008c230

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_87:
   \   00000000   0x4008C224         DC32     0x4008c224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_88:
   \   00000000   0x4008C228         DC32     0x4008c228

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_89:
   \   00000000   0x005B8D80         DC32     0x5b8d80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_90:
   \   00000000   0x4008C00C         DC32     0x4008c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_91:
   \   00000000   0x4008C004         DC32     0x4008c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_92:
   \   00000000   0x4008C008         DC32     0x4008c008

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0x0D          DC8 "\012\015*** 1ms timing violation: "
   \              0x2A 0x2A    
   \              0x2A 0x20    
   \              0x31 0x6D    
   \              0x73 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x76    
   \              0x69 0x6F    
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    483          
    484          
    485          /*--------------------------------------------------------------------------------------------------------------------*/
    486          /*! @privatesection */                                                                                            
    487          /*--------------------------------------------------------------------------------------------------------------------*/
    488          
    489          
    490          /*--------------------------------------------------------------------------------------------------------------------*/
    491          /* End of File */
    492          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClockSetup
       0   GpioSetup
       0   PWMAudioOff
       0   PWMAudioOn
       4   PWMAudioSetFrequency
       0   PWMSetupAudio
       0   SysTickSetup
       0   SystemSleep
       8   SystemTimeCheck
         8   -> DebugLineFeed
         8   -> DebugPrintNumber
         8   -> DebugPrintf
       0   WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_24
       4  ??DataTable9_25
       4  ??DataTable9_26
       4  ??DataTable9_27
       4  ??DataTable9_28
       4  ??DataTable9_29
       4  ??DataTable9_3
       4  ??DataTable9_30
       4  ??DataTable9_31
       4  ??DataTable9_32
       4  ??DataTable9_33
       4  ??DataTable9_34
       4  ??DataTable9_35
       4  ??DataTable9_36
       4  ??DataTable9_37
       4  ??DataTable9_38
       4  ??DataTable9_39
       4  ??DataTable9_4
       4  ??DataTable9_40
       4  ??DataTable9_41
       4  ??DataTable9_42
       4  ??DataTable9_43
       4  ??DataTable9_44
       4  ??DataTable9_45
       4  ??DataTable9_46
       4  ??DataTable9_47
       4  ??DataTable9_48
       4  ??DataTable9_49
       4  ??DataTable9_5
       4  ??DataTable9_50
       4  ??DataTable9_51
       4  ??DataTable9_52
       4  ??DataTable9_53
       4  ??DataTable9_54
       4  ??DataTable9_55
       4  ??DataTable9_56
       4  ??DataTable9_57
       4  ??DataTable9_58
       4  ??DataTable9_59
       4  ??DataTable9_6
       4  ??DataTable9_60
       4  ??DataTable9_61
       4  ??DataTable9_62
       4  ??DataTable9_63
       4  ??DataTable9_64
       4  ??DataTable9_65
       4  ??DataTable9_66
       4  ??DataTable9_67
       4  ??DataTable9_68
       4  ??DataTable9_69
       4  ??DataTable9_7
       4  ??DataTable9_70
       4  ??DataTable9_71
       4  ??DataTable9_72
       4  ??DataTable9_73
       4  ??DataTable9_74
       4  ??DataTable9_75
       4  ??DataTable9_76
       4  ??DataTable9_77
       4  ??DataTable9_78
       4  ??DataTable9_79
       4  ??DataTable9_8
       4  ??DataTable9_80
       4  ??DataTable9_81
       4  ??DataTable9_82
       4  ??DataTable9_83
       4  ??DataTable9_84
       4  ??DataTable9_85
       4  ??DataTable9_86
       4  ??DataTable9_87
       4  ??DataTable9_88
       4  ??DataTable9_89
       4  ??DataTable9_9
       4  ??DataTable9_90
       4  ??DataTable9_91
       4  ??DataTable9_92
      32  ?_0
       4  Bsp_u32TimingViolationsCounter
     122  ClockSetup
      32  G_asBspButtonConfigurations
      88  G_asBspLedConfigurations
     236  GpioSetup
       8  PWMAudioOff
       8  PWMAudioOn
      68  PWMAudioSetFrequency
      84  PWMSetupAudio
      34  SysTickSetup
      50  SystemSleep
      74  SystemTimeCheck
       8  WatchDogSetup
       4  u32PreviousSystemTick

 
     8 bytes in section .bss
   152 bytes in section .rodata
 1 064 bytes in section .text
 
 1 064 bytes of CODE  memory
   152 bytes of CONST memory
     8 bytes of DATA  memory

Errors: none
Warnings: none
